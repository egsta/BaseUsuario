// <auto-generated />
using System;
using BaseUsuario;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BaseUsuario.Migrations
{
    [DbContext(typeof(BaseUsuarioContext))]
    partial class BaseUsuarioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BaseUsuario.Models.AlquilerVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PeliculasId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int");

                    b.Property<int?>("alq_com")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("devolucion")
                        .HasColumnType("int");

                    b.Property<decimal?>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PeliculasId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("AlquilerVenta");
                });

            modelBuilder.Entity("BaseUsuario.Models.Generos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("txt_desc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("BaseUsuario.Models.Peliculas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("cant_disponibles_alquiler")
                        .HasColumnType("int");

                    b.Property<int?>("cant_disponibles_venta")
                        .HasColumnType("int");

                    b.Property<decimal?>("precio_alquiler")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("precio_venta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("txt_desc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("BaseUsuario.Models.Rols", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SnActivo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("BaseUsuario.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolsId")
                        .HasColumnType("int");

                    b.Property<int>("SnActivo")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RolsId")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GenerosPeliculas", b =>
                {
                    b.Property<int>("CodGenerosId")
                        .HasColumnType("int");

                    b.Property<int>("IdsId")
                        .HasColumnType("int");

                    b.HasKey("CodGenerosId", "IdsId");

                    b.HasIndex("IdsId");

                    b.ToTable("GenerosPeliculas");
                });

            modelBuilder.Entity("BaseUsuario.Models.AlquilerVenta", b =>
                {
                    b.HasOne("BaseUsuario.Models.Peliculas", "Peliculas")
                        .WithMany("AlquilerVenta")
                        .HasForeignKey("PeliculasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseUsuario.Models.Usuarios", "Usuarios")
                        .WithMany("AlquilerVentas")
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peliculas");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("BaseUsuario.Models.Usuarios", b =>
                {
                    b.HasOne("BaseUsuario.Models.Rols", null)
                        .WithOne("usuarios")
                        .HasForeignKey("BaseUsuario.Models.Usuarios", "RolsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenerosPeliculas", b =>
                {
                    b.HasOne("BaseUsuario.Models.Generos", null)
                        .WithMany()
                        .HasForeignKey("CodGenerosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseUsuario.Models.Peliculas", null)
                        .WithMany()
                        .HasForeignKey("IdsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BaseUsuario.Models.Peliculas", b =>
                {
                    b.Navigation("AlquilerVenta");
                });

            modelBuilder.Entity("BaseUsuario.Models.Rols", b =>
                {
                    b.Navigation("usuarios")
                        .IsRequired();
                });

            modelBuilder.Entity("BaseUsuario.Models.Usuarios", b =>
                {
                    b.Navigation("AlquilerVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
